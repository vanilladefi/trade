/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { VanillaV1Converter } from "../VanillaV1Converter";

export class VanillaV1Converter__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VanillaV1Converter {
    return new Contract(address, _abi, signerOrProvider) as VanillaV1Converter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "converter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VNLConverted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "checkEligibility",
    outputs: [
      {
        internalType: "bool",
        name: "convertible",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "transferable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "convertVNL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrationState",
    outputs: [
      {
        internalType: "contract VanillaV1MigrationState",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
