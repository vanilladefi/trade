/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UniswapV3TestHelper } from "../UniswapV3TestHelper";

export class UniswapV3TestHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3TestHelper> {
    return super.deploy(overrides || {}) as Promise<UniswapV3TestHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UniswapV3TestHelper {
    return super.attach(address) as UniswapV3TestHelper;
  }
  connect(signer: Signer): UniswapV3TestHelper__factory {
    return super.connect(signer) as UniswapV3TestHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3TestHelper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3TestHelper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "int24",
        name: "low",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "high",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b69806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637b4f53271461003b578063d348799714610050575b600080fd5b61004e61004936600461079e565b610063565b005b61004e61005e366004610870565b6101aa565b846001600160a01b0316633c8a7d8d858585858a3360405160200161009e9291906001600160a01b0392831681529116602082015260400190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016100cd959493929190610936565b6040805180830381600087803b1580156100e657600080fd5b505af1925050508015610116575060408051601f3d908101601f191682019092526101139181019061084d565b60015b6101a157610122610a32565b806308c379a014156101955750610137610a4a565b806101425750610197565b6101726040518060400160405280600e81526020016d19985a5b1959081d1bc81b5a5b9d60921b815250826105cd565b8060405162461bcd60e51b815260040161018c9190610983565b60405180910390fd5b505b3d6000803e3d6000fd5b50505050505050565b6000806101b983850185610766565b915091506101f46040518060400160405280601481526020017328746172676574506f6f6c2c20736f757263652960601b8152508383610616565b6001600160a01b03821633146102355760405162461bcd60e51b81526020600482015260066024820152653932b0b9b7b760d11b604482015260640161018c565b8515610465576000826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae9190610743565b90506102d1604051806060016040528060258152602001610aea60259139610662565b6040516370a0823160e01b81526001600160a01b0383811660048301526103d89183918a91908316906370a08231906024015b60206040518083038186803b15801561031c57600080fd5b505afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610835565b604051636eb1769f60e11b81526001600160a01b03878116600483015230602483015286169063dd62ed3e9060440160206040518083038186803b15801561039b57600080fd5b505afa1580156103af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d39190610835565b6106a8565b6040516323b872dd60e01b81526001600160a01b0383811660048301528481166024830152604482018990528216906323b872dd90606401602060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104629190610815565b50505b84156105c5576000826001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a657600080fd5b505afa1580156104ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104de9190610743565b9050610501604051806060016040528060258152602001610b0f60259139610662565b6040516370a0823160e01b81526001600160a01b0383811660048301526105389183918991908316906370a0823190602401610304565b6040516323b872dd60e01b81526001600160a01b0383811660048301528481166024830152604482018890528216906323b872dd90606401602060405180830381600087803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c29190610815565b50505b505050505050565b61061282826040516024016105e39291906109c9565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905261070b565b5050565b61065d83838360405160240161062e93929190610996565b60408051601f198184030181529190526020810180516001600160e01b03166307e763af60e51b17905261070b565b505050565b6106a5816040516024016106769190610983565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261070b565b50565b6040516001600160a01b03851660248201526044810184905260648101839052608481018290526107059060a40160408051601f198184030181529190526020810180516001600160e01b0316630f43a77960e21b17905261070b565b50505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8035600281900b811461073e57600080fd5b919050565b600060208284031215610754578081fd5b815161075f81610ad4565b9392505050565b60008060408385031215610778578081fd5b823561078381610ad4565b9150602083013561079381610ad4565b809150509250929050565b600080600080600060a086880312156107b5578081fd5b85356107c081610ad4565b945060208601356107d081610ad4565b93506107de6040870161072c565b92506107ec6060870161072c565b915060808601356001600160801b0381168114610807578182fd5b809150509295509295909350565b600060208284031215610826578081fd5b8151801515811461075f578182fd5b600060208284031215610846578081fd5b5051919050565b6000806040838503121561085f578182fd5b505080516020909101519092909150565b60008060008060608587031215610885578384fd5b8435935060208501359250604085013567ffffffffffffffff808211156108aa578384fd5b818701915087601f8301126108bd578384fd5b8135818111156108cb578485fd5b8860208285010111156108dc578485fd5b95989497505060200194505050565b60008151808452815b81811015610910576020818501810151868301820152016108f4565b818111156109215782602083870101525b50601f01601f19169290920160200192915050565b60018060a01b03861681528460020b60208201528360020b60408201526001600160801b038316606082015260a06080820152600061097860a08301846108eb565b979650505050505050565b60208152600061075f60208301846108eb565b6060815260006109a960608301866108eb565b6001600160a01b0394851660208401529290931660409091015292915050565b6040815260006109dc60408301856108eb565b82810360208401526109ee81856108eb565b95945050505050565b601f8201601f1916810167ffffffffffffffff81118282101715610a2b57634e487b7160e01b600052604160045260246000fd5b6040525050565b600060033d1115610a4757600481823e5160e01c5b90565b600060443d1015610a585790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715610a8857505050505090565b8285019150815181811115610aa05750505050505090565b843d8701016020828501011115610aba5750505050505090565b610ac9602082860101876109f7565b509095945050505050565b6001600160a01b03811681146106a557600080fdfe28746f6b656e302c20616d6f756e74302c2062616c616e63652c20616c6c6f77616e63652928746f6b656e312c20616d6f756e74312c2062616c616e63652c20616c6c6f77616e636529a2646970667358221220fa57a61e48391061c27bedc77d682255dcff68c045c260c686ea82c51f19ea9564736f6c63430008040033";
