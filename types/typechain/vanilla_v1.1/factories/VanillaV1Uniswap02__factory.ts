/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { VanillaV1Uniswap02 } from "../VanillaV1Uniswap02";

export class VanillaV1Uniswap02__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VanillaV1Uniswap02> {
    return super.deploy(router, overrides || {}) as Promise<VanillaV1Uniswap02>;
  }
  getDeployTransaction(
    router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, overrides || {});
  }
  attach(address: string): VanillaV1Uniswap02 {
    return super.attach(address) as VanillaV1Uniswap02;
  }
  connect(signer: Signer): VanillaV1Uniswap02__factory {
    return super.connect(signer) as VanillaV1Uniswap02__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VanillaV1Uniswap02 {
    return new Contract(address, _abi, signerOrProvider) as VanillaV1Uniswap02;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPeripheryImmutableState",
        name: "router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516105f93803806105f983398101604081905261002f91610160565b806001600160a01b0316634aa4a4fc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561006857600080fd5b505afa15801561007c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a09190610160565b6001600160a01b031660a0816001600160a01b031660601b81525050806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156100f557600080fd5b505afa158015610109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012d9190610160565b6001600160601b0319606091821b16608052309081901b60c052600080546001600160a01b03191690911790555061019b565b600060208284031215610171578081fd5b815161017c81610183565b9392505050565b6001600160a01b038116811461019857600080fd5b50565b60805160601c60a05160601c60c05160601c61042f6101ca60003960005050600050506000505061042f6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fa461e3314610030575b600080fd5b61004361003e366004610358565b610045565b005b6000808080610056858701876102e5565b600054939750919550935091506001600160a01b0316331461007757600080fd5b60008813156101a0578261008a886103d3565b10156100cd5760405162461bcd60e51b815260206004820152600d60248201526c5631553a20736c69707061676560981b60448201526064015b60405180910390fd5b6001600160a01b0384163014156101655760405163a9059cbb60e01b8152336004820152602481018990526001600160a01b0383169063a9059cbb906044015b602060405180830381600087803b15801561012757600080fd5b505af115801561013b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015f9190610331565b506102bf565b6040516323b872dd60e01b81526001600160a01b038581166004830152336024830152604482018a90528316906323b872dd9060640161010d565b60008713156102bf57826101b3896103d3565b10156101f15760405162461bcd60e51b815260206004820152600d60248201526c5631553a20736c69707061676560981b60448201526064016100c4565b6001600160a01b0384163014156102355760405163a9059cbb60e01b8152336004820152602481018890526001600160a01b0382169063a9059cbb9060440161010d565b6040516323b872dd60e01b81526001600160a01b038581166004830152336024830152604482018990528216906323b872dd90606401602060405180830381600087803b15801561028557600080fd5b505af1158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd9190610331565b505b5050505050505050565b80356001600160a01b03811681146102e057600080fd5b919050565b600080600080608085870312156102fa578384fd5b610303856102c9565b935060208501359250610318604086016102c9565b9150610326606086016102c9565b905092959194509250565b600060208284031215610342578081fd5b81518015158114610351578182fd5b9392505050565b6000806000806060858703121561036d578384fd5b8435935060208501359250604085013567ffffffffffffffff80821115610392578384fd5b818701915087601f8301126103a5578384fd5b8135818111156103b3578485fd5b8860208285010111156103c4578485fd5b95989497505060200194505050565b6000600160ff1b8214156103f557634e487b7160e01b81526011600452602481fd5b039056fea2646970667358221220f0008e104c3a62eae1d5d816eec1dbed59eb8030804ba0e3f193a01f7f1b350c64736f6c63430008040033";
