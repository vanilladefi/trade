/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { VanillaV1Uniswap02 } from "../VanillaV1Uniswap02";

export class VanillaV1Uniswap02__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    routerAddress: string,
    limit: BigNumberish,
    safeList: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VanillaV1Uniswap02> {
    return super.deploy(
      routerAddress,
      limit,
      safeList,
      overrides || {}
    ) as Promise<VanillaV1Uniswap02>;
  }
  getDeployTransaction(
    routerAddress: string,
    limit: BigNumberish,
    safeList: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      routerAddress,
      limit,
      safeList,
      overrides || {}
    );
  }
  attach(address: string): VanillaV1Uniswap02 {
    return super.attach(address) as VanillaV1Uniswap02;
  }
  connect(signer: Signer): VanillaV1Uniswap02__factory {
    return super.connect(signer) as VanillaV1Uniswap02__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VanillaV1Uniswap02 {
    return new Contract(address, _abi, signerOrProvider) as VanillaV1Uniswap02;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "routerAddress",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "limit",
        type: "uint128",
      },
      {
        internalType: "address[]",
        name: "safeList",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenRewarded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wethReserves",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161059938038061059983398101604081905261002f916102cf565b60008390506000816001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561006f57600080fd5b505afa158015610083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a791906102ae565b90506000826001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156100e457600080fd5b505afa1580156100f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011c91906102ae565b905060005b845181101561026e57600085828151811061014c57634e487b7160e01b600052603260045260246000fd5b602090810291909101015160405163e6a4390560e01b81526001600160a01b038083166004830152868116602483015291925060009185169063e6a439059060440160206040518083038186803b1580156101a657600080fd5b505afa1580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de91906102ae565b604080518082019091526002815261309960f11b60208201529091506001600160a01b03821661022a5760405162461bcd60e51b815260040161022191906103c8565b60405180910390fd5b50506001600160a01b0316600090815260208190526040902080546001600160801b0319166001600160801b038816179055806102668161041b565b915050610121565b506001600160601b0319606092831b811660a052911b166080525061045892505050565b80516001600160a01b03811681146102a957600080fd5b919050565b6000602082840312156102bf578081fd5b6102c882610292565b9392505050565b6000806000606084860312156102e3578182fd5b6102ec84610292565b602085810151919450906001600160801b038116811461030a578384fd5b60408601519093506001600160401b0380821115610326578384fd5b818701915087601f830112610339578384fd5b81518181111561034b5761034b610442565b8060051b604051601f19603f8301168101818110858211171561037057610370610442565b604052828152858101935084860182860187018c101561038e578788fd5b8795505b838610156103b7576103a381610292565b855260019590950194938601938601610392565b508096505050505050509250925092565b6000602080835283518082850152825b818110156103f4578581018301518582016040015282016103d8565b818111156104055783604083870101525b50601f01601f1916929092016040019392505050565b600060001982141561043b57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c61011c61047d600039600050506000505061011c6000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063b53880a6146037578063e6ea96f814607d575b600080fd5b6068604236600460ba565b6001600160a01b03166000908152602081905260409020546001600160801b0316151590565b60405190151581526020015b60405180910390f35b60a3608836600460ba565b6000602081905290815260409020546001600160801b031681565b6040516001600160801b0390911681526020016074565b60006020828403121560ca578081fd5b81356001600160a01b038116811460df578182fd5b939250505056fea26469706673582212204ac58f75d7c472f1ff40f6ea9f8aa2c373d26f0c021b6a6536106fb4c592a5d464736f6c63430008040033";
